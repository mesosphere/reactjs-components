& when (@form-enabled) {

  .form {

    .row {

      &:last-child {

        .form-group {
          margin-bottom: 0;
        }
      }
    }
  }

  /* Form Control Group */
  .form-control-group {

    &.filter-input-text-group {
      width: auto;

      // Hide native clear button in IE10+
      ::-ms-clear {
        display: none;
      }

      .form-control-group-add-on-prepend {

        .icon {
          opacity: 0.2;

          &.active {
            opacity: 1;
          }
        }
      }

      .form-control-group-add-on-append {

        &.hidden {
          display: table-cell !important;
          opacity: 0;
        }

        a {

          .icon {
            opacity: 0.2;

            &:hover {
              opacity: 0.6;
            }

            &:active {
              opacity: 1;
            }
          }
        }
      }
    }
  }

  /* Inline Form Elements */
  .form-element-inline {
    appearance: none;
    border: none;
    border-bottom: 1px solid transparent;
    display: flex;
    height: auto;
    padding: @base-spacing-unit * 1/4 0;

    .form-element-inline-text {
      flex: 0 1 auto;
      min-width: @base-spacing-unit;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
    }

    .form-element-inline-icon {
      display: inline-block;
      fill: @form-control-border-color;
      flex: 1 0 16px;
      margin-left: @base-spacing-unit * 1/2;
      opacity: 0;
      transition: opacity 0.25s;
      vertical-align: middle;
    }

    &:hover {
      border: none;
      border-bottom: 1px solid transparent;

      .form-element-inline-icon {
        opacity: 1;
      }
    }

    &:focus {
      background: transparent;
    }
  }

  .form-row-edit {

    .form-element-inline {
      border-bottom: 1px solid @form-control-border-color;
      border-radius: 0;
    }
  }

  // TODO: Reduce the amount of CSS created here by using a generic classname
  // for these common elements.

  /* Checkbox and Radio Button Form Elements */
  .checkbox,
  .radio-button {
    padding-left: 0;
    position: relative;

    &.inverse {
      color: @label-inverse-color;

      input[type='checkbox'],
      input[type='radio'] {

        & + .form-element-checkbox-decoy,
        & + .form-element-radio-button-decoy {
          border-color: @form-control-inverse-disabled-color;
        }

        &:checked + .form-element-checkbox-decoy,
        &:indeterminate + .form-element-checkbox-decoy,
        &:checked + .form-element-radio-button-decoy {
          border-color: @form-control-inverse-focus-color;
        }

        &:disabled + .form-element-checkbox-decoy,
        &:disabled + .form-element-radio-button-decoy {
          background: @form-control-inverse-disabled-color;
          border-color: @form-control-inverse-disabled-color;
        }
      }
    }

    input[type='checkbox'],
    input[type='radio'] {
      left: 0;
      opacity: 0;
      position: absolute;

      & + .form-element-checkbox-decoy,
      & + .form-element-radio-button-decoy {
        border: 1px solid @form-control-border-color;
        display: inline-block;
        height: 16px;
        margin-top: -2px;
        position: relative;
        vertical-align: middle;
        width: 16px;

        svg {
          display: block;
        }

        & + .form-element-checkbox-label,
        & + .form-element-radio-button-label {
          margin-left: @base-spacing-unit * 1/2;
        }
      }

      &:checked + .form-element-checkbox-decoy,
      &:checked + .form-element-radio-button-decoy,
      &:indeterminate + .form-element-checkbox-decoy {
        background: @form-control-focus-color;
        border-color: @form-control-focus-color;
      }

      &:disabled {

        & + .form-element-checkbox-decoy {

          &,
          & + .form-element-checkbox-label {
            opacity: @form-control-disabled-opacity;
          }
        }

        & + .form-element-radio-button-decoy {

          &,
          & + .form-element-radio-button-label {
            opacity: @form-control-disabled-opacity;
          }
        }
      }
    }

    input[type='checkbox'] {

      & + .form-element-checkbox-decoy {
        border-radius: 3px;
      }
    }

    input[type='radio'] {

      & + .form-element-radio-button-decoy {
        border-radius: 50%;
        box-sizing: content-box;

        .icon-radio-button {
          fill: currentColor;

          .icon-radio-button-dot {
            color: @white;
          }

          .icon-radio-button-shadow {
            color: @black;
          }
        }
      }

      &:disabled + .form-element-radio-button-decoy {

        .icon-radio-button {

          // TODO: Figure out an appropriate variable for this element.
          .icon-radio-button-shadow {
            color: #c5c5c5;
          }
        }
      }
    }
  }

  /* 'Textarea' Form Elements: A div with attribute contenteditable='true' */
  .content-editable-wrapper {
    position: relative;
  }

  .content-editable {
    display: block;
    height: auto;
    left: 0;
    max-height: 100%;
    outline: none;
    overflow: auto;
    position: absolute;
    top: 0;
    white-space: pre-wrap;
    width: 100%;
    word-wrap: break-word;

    // Remove any rich-text styling that might be introduced by a user pasting
    // rich-text content or using rich-text keyboard shortcuts.
    * {
      background: none !important;
      border: none !important;
      color: inherit !important;
      font: inherit !important;
      margin: 0 !important;
      padding: 0 !important;
      text-decoration: inherit !important;
      text-shadow: inherit !important;

      &:before,
      &:after {
        display: none;
      }
    }
  }

  .form-group {

    textarea {
      resize: none;
    }
  }
}

& when (@form-enabled) and (@layout-screen-small-enabled) {

  @media (min-width: @layout-screen-small-min-width) {
    /* Form Control Group */
    .form-control-group {

      &.filter-input-text-group {
        width: 100px;
      }
    }
  }
}

& when (@form-enabled) and (@layout-screen-medium-enabled) {

  @media (min-width: @layout-screen-medium-min-width) {
    /* Form Control Group */
    .form-control-group {

      &.filter-input-text-group {
        width: 200px;
      }
    }
  }
}
